Conflict in state 184 between rule 66 and token TELSE resolved as shift.
State 51 contains 1 reduce/reduce conflict.

Grammar
rule 1    mini_c -> translation_unit
rule 2    translation_unit -> external_dcl
rule 3    translation_unit -> translation_unit external_dcl
rule 4    external_dcl -> function_def
rule 5    external_dcl -> declaration
rule 6    external_dcl -> TIDEN TSEMICOLON
rule 7    external_dcl -> TIDEN error
rule 8    function_def -> function_header compound_st
rule 9    function_def -> function_header TSEMICOLON
rule 10   function_def -> function_header error
rule 11   function_header -> dcl_spec function_name formal_param
rule 12   function_header -> dcl_spec formal_param
rule 13   dcl_spec -> dcl_specifiers
rule 14   dcl_specifiers -> dcl_specifier
rule 15   dcl_specifiers -> dcl_specifiers dcl_specifier
rule 16   dcl_specifier -> type_qualifier
rule 17   dcl_specifier -> type_specifier
rule 18   type_qualifier -> TCONST
rule 19   type_specifier -> TINT
rule 20   type_specifier -> TVOID
rule 21   type_specifier -> TFLOAT
rule 22   type_specifier -> TCHAR
rule 23   function_name -> TIDEN
rule 24   formal_param -> TLPAREN opt_formal_param TRPAREN
rule 25   formal_param -> TLPAREN opt_formal_param error
rule 26   opt_formal_param -> formal_param_list
rule 27   opt_formal_param ->		/* empty */
rule 28   formal_param_list -> param_dcl
rule 29   formal_param_list -> formal_param_list TCOMMA param_dcl
rule 30   formal_param_list -> formal_param_list param_dcl
rule 31   param_dcl -> dcl_spec declarator
rule 32   compound_st -> TLBRACE compound TRBRACE
rule 33   compound_st -> TLBRACE compound error
rule 34   compound -> opt_dcl_list opt_stat_list
rule 35   opt_dcl_list -> declaration_list
rule 36   opt_dcl_list ->		/* empty */
rule 37   declaration_list -> declaration
rule 38   declaration_list -> declaration_list declaration
rule 39   declaration -> dcl_spec init_dcl_list TSEMICOLON
rule 40   declaration -> dcl_spec init_dcl_list error
rule 41   init_dcl_list -> init_declarator
rule 42   init_dcl_list -> init_dcl_list TCOMMA init_declarator
rule 43   init_declarator -> declarator
rule 44   init_declarator -> declarator TASSIGN TNUMBER
rule 45   init_declarator -> declarator TASSIGN TSTRING
rule 46   init_declarator -> declarator TASSIGN function_st
rule 47   declarator -> TIDEN
rule 48   declarator -> TIDEN TLBRACKET opt_number TRBRACKET
rule 49   declarator -> TIDEN TLBRACKET opt_number error
rule 50   opt_number -> TNUMBER
rule 51   opt_number ->		/* empty */
rule 52   opt_stat_list -> statement_list
rule 53   opt_stat_list ->		/* empty */
rule 54   statement_list -> statement
rule 55   statement_list -> statement_list statement
rule 56   statement_list -> statement_list declaration
rule 57   statement -> compound_st
rule 58   statement -> expression_st
rule 59   statement -> if_st
rule 60   statement -> while_st
rule 61   statement -> return_st
rule 62   expression_st -> opt_expression TSEMICOLON
rule 63   expression_st -> expression error
rule 64   opt_expression -> expression
rule 65   opt_expression ->		/* empty */
rule 66   if_st -> TIF TLPAREN expression TRPAREN statement
rule 67   if_st -> TIF TLPAREN expression TRPAREN statement TELSE statement
rule 68   while_st -> TWHILE TLPAREN expression TRPAREN statement
rule 69   return_st -> TRETURN opt_expression TSEMICOLON
rule 70   expression -> assignment_exp
rule 71   function_st -> TPLUS function_expression
rule 72   function_st -> TMINUS function_expression
rule 73   function_st -> TMULTIPLY function_expression
rule 74   function_st -> TDIVIDE function_expression
rule 75   function_st -> TMOD function_expression
rule 76   function_expression -> TLPAREN addtive_exp TRPAREN
rule 77   function_expression -> TLPAREN addtive_exp error
rule 78   assignment_exp -> logical_or_exp
rule 79   assignment_exp -> unary_exp TASSIGN assignment_exp
rule 80   assignment_exp -> unary_exp TADDASSIGN assignment_exp
rule 81   assignment_exp -> unary_exp TSUBASSIGN assignment_exp
rule 82   assignment_exp -> unary_exp TMULASSIGN assignment_exp
rule 83   assignment_exp -> unary_exp TDIVASSIGN assignment_exp
rule 84   assignment_exp -> unary_exp TMODASSIGN assignment_exp
rule 85   assignment_exp -> opt_number TASSIGN assignment_exp
rule 86   logical_or_exp -> logical_and_exp
rule 87   logical_or_exp -> logical_or_exp TOR logical_and_exp
rule 88   logical_and_exp -> equality_exp
rule 89   logical_and_exp -> logical_and_exp TAND equality_exp
rule 90   equality_exp -> relational_exp
rule 91   equality_exp -> equality_exp TEQUAL relational_exp
rule 92   equality_exp -> equality_exp TNOTEQU relational_exp
rule 93   relational_exp -> addtive_exp
rule 94   relational_exp -> relational_exp TGREAT addtive_exp
rule 95   relational_exp -> relational_exp TLESS addtive_exp
rule 96   relational_exp -> relational_exp TGREATE addtive_exp
rule 97   relational_exp -> relational_exp TLESSE addtive_exp
rule 98   addtive_exp -> multiplicative_exp
rule 99   addtive_exp -> addtive_exp TPLUS multiplicative_exp
rule 100  addtive_exp -> addtive_exp TMINUS multiplicative_exp
rule 101  multiplicative_exp -> unary_exp
rule 102  multiplicative_exp -> multiplicative_exp TMULTIPLY unary_exp
rule 103  multiplicative_exp -> multiplicative_exp TDIVIDE unary_exp
rule 104  multiplicative_exp -> multiplicative_exp TMOD unary_exp
rule 105  unary_exp -> postfix_exp
rule 106  unary_exp -> TMINUS unary_exp
rule 107  unary_exp -> TNOT unary_exp
rule 108  unary_exp -> TINC unary_exp
rule 109  unary_exp -> TDEC unary_exp
rule 110  postfix_exp -> primary_exp
rule 111  postfix_exp -> postfix_exp TLBRACKET expression TRBRACKET
rule 112  postfix_exp -> postfix_exp TLPAREN opt_actual_param TRPAREN
rule 113  postfix_exp -> postfix_exp TINC
rule 114  postfix_exp -> postfix_exp TDEC
rule 115  postfix_exp -> postfix_exp TLBRACKET expression error
rule 116  opt_actual_param -> actual_param
rule 117  opt_actual_param ->		/* empty */
rule 118  actual_param -> actual_param_list
rule 119  actual_param_list -> assignment_exp
rule 120  actual_param_list -> actual_param_list TCOMMA assignment_exp
rule 121  primary_exp -> TIDEN
rule 122  primary_exp -> TNUMBER
rule 123  primary_exp -> TLPAREN expression TRPAREN

Terminals, with rules where they appear

$ (-1)
error (256) 7 10 25 33 40 49 63 77 115
TIDEN (258) 6 7 23 47 48 49 121
TNUMBER (259) 44 50 122
TCONST (260) 18
TIF (261) 66 67
TINT (262) 19
TRETURN (263) 69
TVOID (264) 20
TWHILE (265) 68
TFLOAT (266) 21
TCHAR (267) 22
TSTRING (268) 45
TADDASSIGN (269) 80
TSUBASSIGN (270) 81
TMULASSIGN (271) 82
TDIVASSIGN (272) 83
TMODASSIGN (273) 84
TOR (274) 87
TAND (275) 89
TEQUAL (276) 91
TNOTEQU (277) 92
TGREAT (278) 94
TLESS (279) 95
TGREATE (280) 96
TLESSE (281) 97
TINC (282) 108 113
TDEC (283) 109 114
TPLUS (284) 71 99
TMINUS (285) 72 100 106
TMULTIPLY (286) 73 102
TDIVIDE (287) 74 103
TMOD (288) 75 104
TNOT (289) 107
TASSIGN (290) 44 45 46 79 85
TLPAREN (291) 24 25 66 67 68 76 77 112 123
TRPAREN (292) 24 66 67 68 76 112 123
TCOMMA (293) 29 42 120
TSEMICOLON (294) 6 9 39 62 69
TLBRACKET (295) 48 49 111 115
TRBRACKET (296) 48 111
TLBRACE (297) 32 33
TRBRACE (298) 32
LOWER_THEN_ELSE (299)
TELSE (300) 67

Nonterminals, with rules where they appear

mini_c (46)
    on left: 1
translation_unit (47)
    on left: 2 3, on right: 1 3
external_dcl (48)
    on left: 4 5 6 7, on right: 2 3
function_def (49)
    on left: 8 9 10, on right: 4
function_header (50)
    on left: 11 12, on right: 8 9 10
dcl_spec (51)
    on left: 13, on right: 11 12 31 39 40
dcl_specifiers (52)
    on left: 14 15, on right: 13 15
dcl_specifier (53)
    on left: 16 17, on right: 14 15
type_qualifier (54)
    on left: 18, on right: 16
type_specifier (55)
    on left: 19 20 21 22, on right: 17
function_name (56)
    on left: 23, on right: 11
formal_param (57)
    on left: 24 25, on right: 11 12
opt_formal_param (58)
    on left: 26 27, on right: 24 25
formal_param_list (59)
    on left: 28 29 30, on right: 26 29 30
param_dcl (60)
    on left: 31, on right: 28 29 30
compound_st (61)
    on left: 32 33, on right: 8 57
compound (62)
    on left: 34, on right: 32 33
opt_dcl_list (63)
    on left: 35 36, on right: 34
declaration_list (64)
    on left: 37 38, on right: 35 38
declaration (65)
    on left: 39 40, on right: 5 37 38 56
init_dcl_list (66)
    on left: 41 42, on right: 39 40 42
init_declarator (67)
    on left: 43 44 45 46, on right: 41 42
declarator (68)
    on left: 47 48 49, on right: 31 43 44 45 46
opt_number (69)
    on left: 50 51, on right: 48 49 85
opt_stat_list (70)
    on left: 52 53, on right: 34
statement_list (71)
    on left: 54 55 56, on right: 52 55 56
statement (72)
    on left: 57 58 59 60 61, on right: 54 55 66 67 68
expression_st (73)
    on left: 62 63, on right: 58
opt_expression (74)
    on left: 64 65, on right: 62 69
if_st (75)
    on left: 66 67, on right: 59
while_st (76)
    on left: 68, on right: 60
return_st (77)
    on left: 69, on right: 61
expression (78)
    on left: 70, on right: 63 64 66 67 68 111 115 123
function_st (79)
    on left: 71 72 73 74 75, on right: 46
function_expression (80)
    on left: 76 77, on right: 71 72 73 74 75
assignment_exp (81)
    on left: 78 79 80 81 82 83 84 85, on right: 70 79 80 81 82 83 84
    85 119 120
logical_or_exp (82)
    on left: 86 87, on right: 78 87
logical_and_exp (83)
    on left: 88 89, on right: 86 87 89
equality_exp (84)
    on left: 90 91 92, on right: 88 89 91 92
relational_exp (85)
    on left: 93 94 95 96 97, on right: 90 91 92 94 95 96 97
addtive_exp (86)
    on left: 98 99 100, on right: 76 77 93 94 95 96 97 99 100
multiplicative_exp (87)
    on left: 101 102 103 104, on right: 98 99 100 102 103 104
unary_exp (88)
    on left: 105 106 107 108 109, on right: 79 80 81 82 83 84 101 102
    103 104 106 107 108 109
postfix_exp (89)
    on left: 110 111 112 113 114 115, on right: 105 111 112 113 114
    115
opt_actual_param (90)
    on left: 116 117, on right: 112
actual_param (91)
    on left: 118, on right: 116
actual_param_list (92)
    on left: 119 120, on right: 118 120
primary_exp (93)
    on left: 121 122 123, on right: 110


state 0

    TIDEN	shift, and go to state 1
    TCONST	shift, and go to state 2
    TINT	shift, and go to state 3
    TVOID	shift, and go to state 4
    TFLOAT	shift, and go to state 5
    TCHAR	shift, and go to state 6

    mini_c	go to state 189
    translation_unit	go to state 7
    external_dcl	go to state 8
    function_def	go to state 9
    function_header	go to state 10
    dcl_spec	go to state 11
    dcl_specifiers	go to state 12
    dcl_specifier	go to state 13
    type_qualifier	go to state 14
    type_specifier	go to state 15
    declaration	go to state 16



state 1

    external_dcl  ->  TIDEN . TSEMICOLON   (rule 6)
    external_dcl  ->  TIDEN . error   (rule 7)

    error	shift, and go to state 17
    TSEMICOLON	shift, and go to state 18



state 2

    type_qualifier  ->  TCONST .   (rule 18)

    $default	reduce using rule 18 (type_qualifier)



state 3

    type_specifier  ->  TINT .   (rule 19)

    $default	reduce using rule 19 (type_specifier)



state 4

    type_specifier  ->  TVOID .   (rule 20)

    $default	reduce using rule 20 (type_specifier)



state 5

    type_specifier  ->  TFLOAT .   (rule 21)

    $default	reduce using rule 21 (type_specifier)



state 6

    type_specifier  ->  TCHAR .   (rule 22)

    $default	reduce using rule 22 (type_specifier)



state 7

    mini_c  ->  translation_unit .   (rule 1)
    translation_unit  ->  translation_unit . external_dcl   (rule 3)

    TIDEN	shift, and go to state 1
    TCONST	shift, and go to state 2
    TINT	shift, and go to state 3
    TVOID	shift, and go to state 4
    TFLOAT	shift, and go to state 5
    TCHAR	shift, and go to state 6

    $default	reduce using rule 1 (mini_c)

    external_dcl	go to state 19
    function_def	go to state 9
    function_header	go to state 10
    dcl_spec	go to state 11
    dcl_specifiers	go to state 12
    dcl_specifier	go to state 13
    type_qualifier	go to state 14
    type_specifier	go to state 15
    declaration	go to state 16



state 8

    translation_unit  ->  external_dcl .   (rule 2)

    $default	reduce using rule 2 (translation_unit)



state 9

    external_dcl  ->  function_def .   (rule 4)

    $default	reduce using rule 4 (external_dcl)



state 10

    function_def  ->  function_header . compound_st   (rule 8)
    function_def  ->  function_header . TSEMICOLON   (rule 9)
    function_def  ->  function_header . error   (rule 10)

    error	shift, and go to state 20
    TSEMICOLON	shift, and go to state 21
    TLBRACE	shift, and go to state 22

    compound_st	go to state 23



state 11

    function_header  ->  dcl_spec . function_name formal_param   (rule 11)
    function_header  ->  dcl_spec . formal_param   (rule 12)
    declaration  ->  dcl_spec . init_dcl_list TSEMICOLON   (rule 39)
    declaration  ->  dcl_spec . init_dcl_list error   (rule 40)

    TIDEN	shift, and go to state 24
    TLPAREN	shift, and go to state 25

    function_name	go to state 26
    formal_param	go to state 27
    init_dcl_list	go to state 28
    init_declarator	go to state 29
    declarator	go to state 30



state 12

    dcl_spec  ->  dcl_specifiers .   (rule 13)
    dcl_specifiers  ->  dcl_specifiers . dcl_specifier   (rule 15)

    TCONST	shift, and go to state 2
    TINT	shift, and go to state 3
    TVOID	shift, and go to state 4
    TFLOAT	shift, and go to state 5
    TCHAR	shift, and go to state 6

    $default	reduce using rule 13 (dcl_spec)

    dcl_specifier	go to state 31
    type_qualifier	go to state 14
    type_specifier	go to state 15



state 13

    dcl_specifiers  ->  dcl_specifier .   (rule 14)

    $default	reduce using rule 14 (dcl_specifiers)



state 14

    dcl_specifier  ->  type_qualifier .   (rule 16)

    $default	reduce using rule 16 (dcl_specifier)



state 15

    dcl_specifier  ->  type_specifier .   (rule 17)

    $default	reduce using rule 17 (dcl_specifier)



state 16

    external_dcl  ->  declaration .   (rule 5)

    $default	reduce using rule 5 (external_dcl)



state 17

    external_dcl  ->  TIDEN error .   (rule 7)

    $default	reduce using rule 7 (external_dcl)



state 18

    external_dcl  ->  TIDEN TSEMICOLON .   (rule 6)

    $default	reduce using rule 6 (external_dcl)



state 19

    translation_unit  ->  translation_unit external_dcl .   (rule 3)

    $default	reduce using rule 3 (translation_unit)



state 20

    function_def  ->  function_header error .   (rule 10)

    $default	reduce using rule 10 (function_def)



state 21

    function_def  ->  function_header TSEMICOLON .   (rule 9)

    $default	reduce using rule 9 (function_def)



state 22

    compound_st  ->  TLBRACE . compound TRBRACE   (rule 32)
    compound_st  ->  TLBRACE . compound error   (rule 33)

    TCONST	shift, and go to state 2
    TINT	shift, and go to state 3
    TVOID	shift, and go to state 4
    TFLOAT	shift, and go to state 5
    TCHAR	shift, and go to state 6

    $default	reduce using rule 36 (opt_dcl_list)

    dcl_spec	go to state 32
    dcl_specifiers	go to state 12
    dcl_specifier	go to state 13
    type_qualifier	go to state 14
    type_specifier	go to state 15
    compound	go to state 33
    opt_dcl_list	go to state 34
    declaration_list	go to state 35
    declaration	go to state 36



state 23

    function_def  ->  function_header compound_st .   (rule 8)

    $default	reduce using rule 8 (function_def)



state 24

    function_name  ->  TIDEN .   (rule 23)
    declarator  ->  TIDEN .   (rule 47)
    declarator  ->  TIDEN . TLBRACKET opt_number TRBRACKET   (rule 48)
    declarator  ->  TIDEN . TLBRACKET opt_number error   (rule 49)

    TLBRACKET	shift, and go to state 37

    TLPAREN	reduce using rule 23 (function_name)
    $default	reduce using rule 47 (declarator)



state 25

    formal_param  ->  TLPAREN . opt_formal_param TRPAREN   (rule 24)
    formal_param  ->  TLPAREN . opt_formal_param error   (rule 25)

    TCONST	shift, and go to state 2
    TINT	shift, and go to state 3
    TVOID	shift, and go to state 4
    TFLOAT	shift, and go to state 5
    TCHAR	shift, and go to state 6

    $default	reduce using rule 27 (opt_formal_param)

    dcl_spec	go to state 38
    dcl_specifiers	go to state 12
    dcl_specifier	go to state 13
    type_qualifier	go to state 14
    type_specifier	go to state 15
    opt_formal_param	go to state 39
    formal_param_list	go to state 40
    param_dcl	go to state 41



state 26

    function_header  ->  dcl_spec function_name . formal_param   (rule 11)

    TLPAREN	shift, and go to state 25

    formal_param	go to state 42



state 27

    function_header  ->  dcl_spec formal_param .   (rule 12)

    $default	reduce using rule 12 (function_header)



state 28

    declaration  ->  dcl_spec init_dcl_list . TSEMICOLON   (rule 39)
    declaration  ->  dcl_spec init_dcl_list . error   (rule 40)
    init_dcl_list  ->  init_dcl_list . TCOMMA init_declarator   (rule 42)

    error	shift, and go to state 43
    TCOMMA	shift, and go to state 44
    TSEMICOLON	shift, and go to state 45



state 29

    init_dcl_list  ->  init_declarator .   (rule 41)

    $default	reduce using rule 41 (init_dcl_list)



state 30

    init_declarator  ->  declarator .   (rule 43)
    init_declarator  ->  declarator . TASSIGN TNUMBER   (rule 44)
    init_declarator  ->  declarator . TASSIGN TSTRING   (rule 45)
    init_declarator  ->  declarator . TASSIGN function_st   (rule 46)

    TASSIGN	shift, and go to state 46

    $default	reduce using rule 43 (init_declarator)



state 31

    dcl_specifiers  ->  dcl_specifiers dcl_specifier .   (rule 15)

    $default	reduce using rule 15 (dcl_specifiers)



state 32

    declaration  ->  dcl_spec . init_dcl_list TSEMICOLON   (rule 39)
    declaration  ->  dcl_spec . init_dcl_list error   (rule 40)

    TIDEN	shift, and go to state 47

    init_dcl_list	go to state 28
    init_declarator	go to state 29
    declarator	go to state 30



state 33

    compound_st  ->  TLBRACE compound . TRBRACE   (rule 32)
    compound_st  ->  TLBRACE compound . error   (rule 33)

    error	shift, and go to state 48
    TRBRACE	shift, and go to state 49



state 34

    compound  ->  opt_dcl_list . opt_stat_list   (rule 34)

    TIDEN	shift, and go to state 50
    TNUMBER	shift, and go to state 51
    TIF 	shift, and go to state 52
    TRETURN	shift, and go to state 53
    TWHILE	shift, and go to state 54
    TINC	shift, and go to state 55
    TDEC	shift, and go to state 56
    TMINUS	shift, and go to state 57
    TNOT	shift, and go to state 58
    TLPAREN	shift, and go to state 59
    TLBRACE	shift, and go to state 22

    TASSIGN	reduce using rule 51 (opt_number)
    TSEMICOLON	reduce using rule 65 (opt_expression)
    $default	reduce using rule 53 (opt_stat_list)

    compound_st	go to state 60
    opt_number	go to state 61
    opt_stat_list	go to state 62
    statement_list	go to state 63
    statement	go to state 64
    expression_st	go to state 65
    opt_expression	go to state 66
    if_st	go to state 67
    while_st	go to state 68
    return_st	go to state 69
    expression	go to state 70
    assignment_exp	go to state 71
    logical_or_exp	go to state 72
    logical_and_exp	go to state 73
    equality_exp	go to state 74
    relational_exp	go to state 75
    addtive_exp	go to state 76
    multiplicative_exp	go to state 77
    unary_exp	go to state 78
    postfix_exp	go to state 79
    primary_exp	go to state 80



state 35

    opt_dcl_list  ->  declaration_list .   (rule 35)
    declaration_list  ->  declaration_list . declaration   (rule 38)

    TCONST	shift, and go to state 2
    TINT	shift, and go to state 3
    TVOID	shift, and go to state 4
    TFLOAT	shift, and go to state 5
    TCHAR	shift, and go to state 6

    $default	reduce using rule 35 (opt_dcl_list)

    dcl_spec	go to state 32
    dcl_specifiers	go to state 12
    dcl_specifier	go to state 13
    type_qualifier	go to state 14
    type_specifier	go to state 15
    declaration	go to state 81



state 36

    declaration_list  ->  declaration .   (rule 37)

    $default	reduce using rule 37 (declaration_list)



state 37

    declarator  ->  TIDEN TLBRACKET . opt_number TRBRACKET   (rule 48)
    declarator  ->  TIDEN TLBRACKET . opt_number error   (rule 49)

    TNUMBER	shift, and go to state 82

    $default	reduce using rule 51 (opt_number)

    opt_number	go to state 83



state 38

    param_dcl  ->  dcl_spec . declarator   (rule 31)

    TIDEN	shift, and go to state 47

    declarator	go to state 84



state 39

    formal_param  ->  TLPAREN opt_formal_param . TRPAREN   (rule 24)
    formal_param  ->  TLPAREN opt_formal_param . error   (rule 25)

    error	shift, and go to state 85
    TRPAREN	shift, and go to state 86



state 40

    opt_formal_param  ->  formal_param_list .   (rule 26)
    formal_param_list  ->  formal_param_list . TCOMMA param_dcl   (rule 29)
    formal_param_list  ->  formal_param_list . param_dcl   (rule 30)

    TCONST	shift, and go to state 2
    TINT	shift, and go to state 3
    TVOID	shift, and go to state 4
    TFLOAT	shift, and go to state 5
    TCHAR	shift, and go to state 6
    TCOMMA	shift, and go to state 87

    $default	reduce using rule 26 (opt_formal_param)

    dcl_spec	go to state 38
    dcl_specifiers	go to state 12
    dcl_specifier	go to state 13
    type_qualifier	go to state 14
    type_specifier	go to state 15
    param_dcl	go to state 88



state 41

    formal_param_list  ->  param_dcl .   (rule 28)

    $default	reduce using rule 28 (formal_param_list)



state 42

    function_header  ->  dcl_spec function_name formal_param .   (rule 11)

    $default	reduce using rule 11 (function_header)



state 43

    declaration  ->  dcl_spec init_dcl_list error .   (rule 40)

    $default	reduce using rule 40 (declaration)



state 44

    init_dcl_list  ->  init_dcl_list TCOMMA . init_declarator   (rule 42)

    TIDEN	shift, and go to state 47

    init_declarator	go to state 89
    declarator	go to state 30



state 45

    declaration  ->  dcl_spec init_dcl_list TSEMICOLON .   (rule 39)

    $default	reduce using rule 39 (declaration)



state 46

    init_declarator  ->  declarator TASSIGN . TNUMBER   (rule 44)
    init_declarator  ->  declarator TASSIGN . TSTRING   (rule 45)
    init_declarator  ->  declarator TASSIGN . function_st   (rule 46)

    TNUMBER	shift, and go to state 90
    TSTRING	shift, and go to state 91
    TPLUS	shift, and go to state 92
    TMINUS	shift, and go to state 93
    TMULTIPLY	shift, and go to state 94
    TDIVIDE	shift, and go to state 95
    TMOD	shift, and go to state 96

    function_st	go to state 97



state 47

    declarator  ->  TIDEN .   (rule 47)
    declarator  ->  TIDEN . TLBRACKET opt_number TRBRACKET   (rule 48)
    declarator  ->  TIDEN . TLBRACKET opt_number error   (rule 49)

    TLBRACKET	shift, and go to state 37

    $default	reduce using rule 47 (declarator)



state 48

    compound_st  ->  TLBRACE compound error .   (rule 33)

    $default	reduce using rule 33 (compound_st)



state 49

    compound_st  ->  TLBRACE compound TRBRACE .   (rule 32)

    $default	reduce using rule 32 (compound_st)



state 50

    primary_exp  ->  TIDEN .   (rule 121)

    $default	reduce using rule 121 (primary_exp)



state 51

    opt_number  ->  TNUMBER .   (rule 50)
    primary_exp  ->  TNUMBER .   (rule 122)

    TASSIGN	reduce using rule 50 (opt_number)
    TASSIGN	[reduce using rule 122 (primary_exp)]
    $default	reduce using rule 122 (primary_exp)



state 52

    if_st  ->  TIF . TLPAREN expression TRPAREN statement   (rule 66)
    if_st  ->  TIF . TLPAREN expression TRPAREN statement TELSE statement   (rule 67)

    TLPAREN	shift, and go to state 98



state 53

    return_st  ->  TRETURN . opt_expression TSEMICOLON   (rule 69)

    TIDEN	shift, and go to state 50
    TNUMBER	shift, and go to state 51
    TINC	shift, and go to state 55
    TDEC	shift, and go to state 56
    TMINUS	shift, and go to state 57
    TNOT	shift, and go to state 58
    TLPAREN	shift, and go to state 59

    TSEMICOLON	reduce using rule 65 (opt_expression)
    $default	reduce using rule 51 (opt_number)

    opt_number	go to state 61
    opt_expression	go to state 99
    expression	go to state 100
    assignment_exp	go to state 71
    logical_or_exp	go to state 72
    logical_and_exp	go to state 73
    equality_exp	go to state 74
    relational_exp	go to state 75
    addtive_exp	go to state 76
    multiplicative_exp	go to state 77
    unary_exp	go to state 78
    postfix_exp	go to state 79
    primary_exp	go to state 80



state 54

    while_st  ->  TWHILE . TLPAREN expression TRPAREN statement   (rule 68)

    TLPAREN	shift, and go to state 101



state 55

    unary_exp  ->  TINC . unary_exp   (rule 108)

    TIDEN	shift, and go to state 50
    TNUMBER	shift, and go to state 102
    TINC	shift, and go to state 55
    TDEC	shift, and go to state 56
    TMINUS	shift, and go to state 57
    TNOT	shift, and go to state 58
    TLPAREN	shift, and go to state 59

    unary_exp	go to state 103
    postfix_exp	go to state 79
    primary_exp	go to state 80



state 56

    unary_exp  ->  TDEC . unary_exp   (rule 109)

    TIDEN	shift, and go to state 50
    TNUMBER	shift, and go to state 102
    TINC	shift, and go to state 55
    TDEC	shift, and go to state 56
    TMINUS	shift, and go to state 57
    TNOT	shift, and go to state 58
    TLPAREN	shift, and go to state 59

    unary_exp	go to state 104
    postfix_exp	go to state 79
    primary_exp	go to state 80



state 57

    unary_exp  ->  TMINUS . unary_exp   (rule 106)

    TIDEN	shift, and go to state 50
    TNUMBER	shift, and go to state 102
    TINC	shift, and go to state 55
    TDEC	shift, and go to state 56
    TMINUS	shift, and go to state 57
    TNOT	shift, and go to state 58
    TLPAREN	shift, and go to state 59

    unary_exp	go to state 105
    postfix_exp	go to state 79
    primary_exp	go to state 80



state 58

    unary_exp  ->  TNOT . unary_exp   (rule 107)

    TIDEN	shift, and go to state 50
    TNUMBER	shift, and go to state 102
    TINC	shift, and go to state 55
    TDEC	shift, and go to state 56
    TMINUS	shift, and go to state 57
    TNOT	shift, and go to state 58
    TLPAREN	shift, and go to state 59

    unary_exp	go to state 106
    postfix_exp	go to state 79
    primary_exp	go to state 80



state 59

    primary_exp  ->  TLPAREN . expression TRPAREN   (rule 123)

    TIDEN	shift, and go to state 50
    TNUMBER	shift, and go to state 51
    TINC	shift, and go to state 55
    TDEC	shift, and go to state 56
    TMINUS	shift, and go to state 57
    TNOT	shift, and go to state 58
    TLPAREN	shift, and go to state 59

    $default	reduce using rule 51 (opt_number)

    opt_number	go to state 61
    expression	go to state 107
    assignment_exp	go to state 71
    logical_or_exp	go to state 72
    logical_and_exp	go to state 73
    equality_exp	go to state 74
    relational_exp	go to state 75
    addtive_exp	go to state 76
    multiplicative_exp	go to state 77
    unary_exp	go to state 78
    postfix_exp	go to state 79
    primary_exp	go to state 80



state 60

    statement  ->  compound_st .   (rule 57)

    $default	reduce using rule 57 (statement)



state 61

    assignment_exp  ->  opt_number . TASSIGN assignment_exp   (rule 85)

    TASSIGN	shift, and go to state 108



state 62

    compound  ->  opt_dcl_list opt_stat_list .   (rule 34)

    $default	reduce using rule 34 (compound)



state 63

    opt_stat_list  ->  statement_list .   (rule 52)
    statement_list  ->  statement_list . statement   (rule 55)
    statement_list  ->  statement_list . declaration   (rule 56)

    TIDEN	shift, and go to state 50
    TNUMBER	shift, and go to state 51
    TCONST	shift, and go to state 2
    TIF 	shift, and go to state 52
    TINT	shift, and go to state 3
    TRETURN	shift, and go to state 53
    TVOID	shift, and go to state 4
    TWHILE	shift, and go to state 54
    TFLOAT	shift, and go to state 5
    TCHAR	shift, and go to state 6
    TINC	shift, and go to state 55
    TDEC	shift, and go to state 56
    TMINUS	shift, and go to state 57
    TNOT	shift, and go to state 58
    TLPAREN	shift, and go to state 59
    TLBRACE	shift, and go to state 22

    TASSIGN	reduce using rule 51 (opt_number)
    TSEMICOLON	reduce using rule 65 (opt_expression)
    $default	reduce using rule 52 (opt_stat_list)

    dcl_spec	go to state 32
    dcl_specifiers	go to state 12
    dcl_specifier	go to state 13
    type_qualifier	go to state 14
    type_specifier	go to state 15
    compound_st	go to state 60
    declaration	go to state 109
    opt_number	go to state 61
    statement	go to state 110
    expression_st	go to state 65
    opt_expression	go to state 66
    if_st	go to state 67
    while_st	go to state 68
    return_st	go to state 69
    expression	go to state 70
    assignment_exp	go to state 71
    logical_or_exp	go to state 72
    logical_and_exp	go to state 73
    equality_exp	go to state 74
    relational_exp	go to state 75
    addtive_exp	go to state 76
    multiplicative_exp	go to state 77
    unary_exp	go to state 78
    postfix_exp	go to state 79
    primary_exp	go to state 80



state 64

    statement_list  ->  statement .   (rule 54)

    $default	reduce using rule 54 (statement_list)



state 65

    statement  ->  expression_st .   (rule 58)

    $default	reduce using rule 58 (statement)



state 66

    expression_st  ->  opt_expression . TSEMICOLON   (rule 62)

    TSEMICOLON	shift, and go to state 111



state 67

    statement  ->  if_st .   (rule 59)

    $default	reduce using rule 59 (statement)



state 68

    statement  ->  while_st .   (rule 60)

    $default	reduce using rule 60 (statement)



state 69

    statement  ->  return_st .   (rule 61)

    $default	reduce using rule 61 (statement)



state 70

    expression_st  ->  expression . error   (rule 63)
    opt_expression  ->  expression .   (rule 64)

    error	shift, and go to state 112

    TSEMICOLON	reduce using rule 64 (opt_expression)



state 71

    expression  ->  assignment_exp .   (rule 70)

    $default	reduce using rule 70 (expression)



state 72

    assignment_exp  ->  logical_or_exp .   (rule 78)
    logical_or_exp  ->  logical_or_exp . TOR logical_and_exp   (rule 87)

    TOR 	shift, and go to state 113

    $default	reduce using rule 78 (assignment_exp)



state 73

    logical_or_exp  ->  logical_and_exp .   (rule 86)
    logical_and_exp  ->  logical_and_exp . TAND equality_exp   (rule 89)

    TAND	shift, and go to state 114

    $default	reduce using rule 86 (logical_or_exp)



state 74

    logical_and_exp  ->  equality_exp .   (rule 88)
    equality_exp  ->  equality_exp . TEQUAL relational_exp   (rule 91)
    equality_exp  ->  equality_exp . TNOTEQU relational_exp   (rule 92)

    TEQUAL	shift, and go to state 115
    TNOTEQU	shift, and go to state 116

    $default	reduce using rule 88 (logical_and_exp)



state 75

    equality_exp  ->  relational_exp .   (rule 90)
    relational_exp  ->  relational_exp . TGREAT addtive_exp   (rule 94)
    relational_exp  ->  relational_exp . TLESS addtive_exp   (rule 95)
    relational_exp  ->  relational_exp . TGREATE addtive_exp   (rule 96)
    relational_exp  ->  relational_exp . TLESSE addtive_exp   (rule 97)

    TGREAT	shift, and go to state 117
    TLESS	shift, and go to state 118
    TGREATE	shift, and go to state 119
    TLESSE	shift, and go to state 120

    $default	reduce using rule 90 (equality_exp)



state 76

    relational_exp  ->  addtive_exp .   (rule 93)
    addtive_exp  ->  addtive_exp . TPLUS multiplicative_exp   (rule 99)
    addtive_exp  ->  addtive_exp . TMINUS multiplicative_exp   (rule 100)

    TPLUS	shift, and go to state 121
    TMINUS	shift, and go to state 122

    $default	reduce using rule 93 (relational_exp)



state 77

    addtive_exp  ->  multiplicative_exp .   (rule 98)
    multiplicative_exp  ->  multiplicative_exp . TMULTIPLY unary_exp   (rule 102)
    multiplicative_exp  ->  multiplicative_exp . TDIVIDE unary_exp   (rule 103)
    multiplicative_exp  ->  multiplicative_exp . TMOD unary_exp   (rule 104)

    TMULTIPLY	shift, and go to state 123
    TDIVIDE	shift, and go to state 124
    TMOD	shift, and go to state 125

    $default	reduce using rule 98 (addtive_exp)



state 78

    assignment_exp  ->  unary_exp . TASSIGN assignment_exp   (rule 79)
    assignment_exp  ->  unary_exp . TADDASSIGN assignment_exp   (rule 80)
    assignment_exp  ->  unary_exp . TSUBASSIGN assignment_exp   (rule 81)
    assignment_exp  ->  unary_exp . TMULASSIGN assignment_exp   (rule 82)
    assignment_exp  ->  unary_exp . TDIVASSIGN assignment_exp   (rule 83)
    assignment_exp  ->  unary_exp . TMODASSIGN assignment_exp   (rule 84)
    multiplicative_exp  ->  unary_exp .   (rule 101)

    TADDASSIGN	shift, and go to state 126
    TSUBASSIGN	shift, and go to state 127
    TMULASSIGN	shift, and go to state 128
    TDIVASSIGN	shift, and go to state 129
    TMODASSIGN	shift, and go to state 130
    TASSIGN	shift, and go to state 131

    $default	reduce using rule 101 (multiplicative_exp)



state 79

    unary_exp  ->  postfix_exp .   (rule 105)
    postfix_exp  ->  postfix_exp . TLBRACKET expression TRBRACKET   (rule 111)
    postfix_exp  ->  postfix_exp . TLPAREN opt_actual_param TRPAREN   (rule 112)
    postfix_exp  ->  postfix_exp . TINC   (rule 113)
    postfix_exp  ->  postfix_exp . TDEC   (rule 114)
    postfix_exp  ->  postfix_exp . TLBRACKET expression error   (rule 115)

    TINC	shift, and go to state 132
    TDEC	shift, and go to state 133
    TLPAREN	shift, and go to state 134
    TLBRACKET	shift, and go to state 135

    $default	reduce using rule 105 (unary_exp)



state 80

    postfix_exp  ->  primary_exp .   (rule 110)

    $default	reduce using rule 110 (postfix_exp)



state 81

    declaration_list  ->  declaration_list declaration .   (rule 38)

    $default	reduce using rule 38 (declaration_list)



state 82

    opt_number  ->  TNUMBER .   (rule 50)

    $default	reduce using rule 50 (opt_number)



state 83

    declarator  ->  TIDEN TLBRACKET opt_number . TRBRACKET   (rule 48)
    declarator  ->  TIDEN TLBRACKET opt_number . error   (rule 49)

    error	shift, and go to state 136
    TRBRACKET	shift, and go to state 137



state 84

    param_dcl  ->  dcl_spec declarator .   (rule 31)

    $default	reduce using rule 31 (param_dcl)



state 85

    formal_param  ->  TLPAREN opt_formal_param error .   (rule 25)

    $default	reduce using rule 25 (formal_param)



state 86

    formal_param  ->  TLPAREN opt_formal_param TRPAREN .   (rule 24)

    $default	reduce using rule 24 (formal_param)



state 87

    formal_param_list  ->  formal_param_list TCOMMA . param_dcl   (rule 29)

    TCONST	shift, and go to state 2
    TINT	shift, and go to state 3
    TVOID	shift, and go to state 4
    TFLOAT	shift, and go to state 5
    TCHAR	shift, and go to state 6

    dcl_spec	go to state 38
    dcl_specifiers	go to state 12
    dcl_specifier	go to state 13
    type_qualifier	go to state 14
    type_specifier	go to state 15
    param_dcl	go to state 138



state 88

    formal_param_list  ->  formal_param_list param_dcl .   (rule 30)

    $default	reduce using rule 30 (formal_param_list)



state 89

    init_dcl_list  ->  init_dcl_list TCOMMA init_declarator .   (rule 42)

    $default	reduce using rule 42 (init_dcl_list)



state 90

    init_declarator  ->  declarator TASSIGN TNUMBER .   (rule 44)

    $default	reduce using rule 44 (init_declarator)



state 91

    init_declarator  ->  declarator TASSIGN TSTRING .   (rule 45)

    $default	reduce using rule 45 (init_declarator)



state 92

    function_st  ->  TPLUS . function_expression   (rule 71)

    TLPAREN	shift, and go to state 139

    function_expression	go to state 140



state 93

    function_st  ->  TMINUS . function_expression   (rule 72)

    TLPAREN	shift, and go to state 139

    function_expression	go to state 141



state 94

    function_st  ->  TMULTIPLY . function_expression   (rule 73)

    TLPAREN	shift, and go to state 139

    function_expression	go to state 142



state 95

    function_st  ->  TDIVIDE . function_expression   (rule 74)

    TLPAREN	shift, and go to state 139

    function_expression	go to state 143



state 96

    function_st  ->  TMOD . function_expression   (rule 75)

    TLPAREN	shift, and go to state 139

    function_expression	go to state 144



state 97

    init_declarator  ->  declarator TASSIGN function_st .   (rule 46)

    $default	reduce using rule 46 (init_declarator)



state 98

    if_st  ->  TIF TLPAREN . expression TRPAREN statement   (rule 66)
    if_st  ->  TIF TLPAREN . expression TRPAREN statement TELSE statement   (rule 67)

    TIDEN	shift, and go to state 50
    TNUMBER	shift, and go to state 51
    TINC	shift, and go to state 55
    TDEC	shift, and go to state 56
    TMINUS	shift, and go to state 57
    TNOT	shift, and go to state 58
    TLPAREN	shift, and go to state 59

    $default	reduce using rule 51 (opt_number)

    opt_number	go to state 61
    expression	go to state 145
    assignment_exp	go to state 71
    logical_or_exp	go to state 72
    logical_and_exp	go to state 73
    equality_exp	go to state 74
    relational_exp	go to state 75
    addtive_exp	go to state 76
    multiplicative_exp	go to state 77
    unary_exp	go to state 78
    postfix_exp	go to state 79
    primary_exp	go to state 80



state 99

    return_st  ->  TRETURN opt_expression . TSEMICOLON   (rule 69)

    TSEMICOLON	shift, and go to state 146



state 100

    opt_expression  ->  expression .   (rule 64)

    $default	reduce using rule 64 (opt_expression)



state 101

    while_st  ->  TWHILE TLPAREN . expression TRPAREN statement   (rule 68)

    TIDEN	shift, and go to state 50
    TNUMBER	shift, and go to state 51
    TINC	shift, and go to state 55
    TDEC	shift, and go to state 56
    TMINUS	shift, and go to state 57
    TNOT	shift, and go to state 58
    TLPAREN	shift, and go to state 59

    $default	reduce using rule 51 (opt_number)

    opt_number	go to state 61
    expression	go to state 147
    assignment_exp	go to state 71
    logical_or_exp	go to state 72
    logical_and_exp	go to state 73
    equality_exp	go to state 74
    relational_exp	go to state 75
    addtive_exp	go to state 76
    multiplicative_exp	go to state 77
    unary_exp	go to state 78
    postfix_exp	go to state 79
    primary_exp	go to state 80



state 102

    primary_exp  ->  TNUMBER .   (rule 122)

    $default	reduce using rule 122 (primary_exp)



state 103

    unary_exp  ->  TINC unary_exp .   (rule 108)

    $default	reduce using rule 108 (unary_exp)



state 104

    unary_exp  ->  TDEC unary_exp .   (rule 109)

    $default	reduce using rule 109 (unary_exp)



state 105

    unary_exp  ->  TMINUS unary_exp .   (rule 106)

    $default	reduce using rule 106 (unary_exp)



state 106

    unary_exp  ->  TNOT unary_exp .   (rule 107)

    $default	reduce using rule 107 (unary_exp)



state 107

    primary_exp  ->  TLPAREN expression . TRPAREN   (rule 123)

    TRPAREN	shift, and go to state 148



state 108

    assignment_exp  ->  opt_number TASSIGN . assignment_exp   (rule 85)

    TIDEN	shift, and go to state 50
    TNUMBER	shift, and go to state 51
    TINC	shift, and go to state 55
    TDEC	shift, and go to state 56
    TMINUS	shift, and go to state 57
    TNOT	shift, and go to state 58
    TLPAREN	shift, and go to state 59

    $default	reduce using rule 51 (opt_number)

    opt_number	go to state 61
    assignment_exp	go to state 149
    logical_or_exp	go to state 72
    logical_and_exp	go to state 73
    equality_exp	go to state 74
    relational_exp	go to state 75
    addtive_exp	go to state 76
    multiplicative_exp	go to state 77
    unary_exp	go to state 78
    postfix_exp	go to state 79
    primary_exp	go to state 80



state 109

    statement_list  ->  statement_list declaration .   (rule 56)

    $default	reduce using rule 56 (statement_list)



state 110

    statement_list  ->  statement_list statement .   (rule 55)

    $default	reduce using rule 55 (statement_list)



state 111

    expression_st  ->  opt_expression TSEMICOLON .   (rule 62)

    $default	reduce using rule 62 (expression_st)



state 112

    expression_st  ->  expression error .   (rule 63)

    $default	reduce using rule 63 (expression_st)



state 113

    logical_or_exp  ->  logical_or_exp TOR . logical_and_exp   (rule 87)

    TIDEN	shift, and go to state 50
    TNUMBER	shift, and go to state 102
    TINC	shift, and go to state 55
    TDEC	shift, and go to state 56
    TMINUS	shift, and go to state 57
    TNOT	shift, and go to state 58
    TLPAREN	shift, and go to state 59

    logical_and_exp	go to state 150
    equality_exp	go to state 74
    relational_exp	go to state 75
    addtive_exp	go to state 76
    multiplicative_exp	go to state 77
    unary_exp	go to state 151
    postfix_exp	go to state 79
    primary_exp	go to state 80



state 114

    logical_and_exp  ->  logical_and_exp TAND . equality_exp   (rule 89)

    TIDEN	shift, and go to state 50
    TNUMBER	shift, and go to state 102
    TINC	shift, and go to state 55
    TDEC	shift, and go to state 56
    TMINUS	shift, and go to state 57
    TNOT	shift, and go to state 58
    TLPAREN	shift, and go to state 59

    equality_exp	go to state 152
    relational_exp	go to state 75
    addtive_exp	go to state 76
    multiplicative_exp	go to state 77
    unary_exp	go to state 151
    postfix_exp	go to state 79
    primary_exp	go to state 80



state 115

    equality_exp  ->  equality_exp TEQUAL . relational_exp   (rule 91)

    TIDEN	shift, and go to state 50
    TNUMBER	shift, and go to state 102
    TINC	shift, and go to state 55
    TDEC	shift, and go to state 56
    TMINUS	shift, and go to state 57
    TNOT	shift, and go to state 58
    TLPAREN	shift, and go to state 59

    relational_exp	go to state 153
    addtive_exp	go to state 76
    multiplicative_exp	go to state 77
    unary_exp	go to state 151
    postfix_exp	go to state 79
    primary_exp	go to state 80



state 116

    equality_exp  ->  equality_exp TNOTEQU . relational_exp   (rule 92)

    TIDEN	shift, and go to state 50
    TNUMBER	shift, and go to state 102
    TINC	shift, and go to state 55
    TDEC	shift, and go to state 56
    TMINUS	shift, and go to state 57
    TNOT	shift, and go to state 58
    TLPAREN	shift, and go to state 59

    relational_exp	go to state 154
    addtive_exp	go to state 76
    multiplicative_exp	go to state 77
    unary_exp	go to state 151
    postfix_exp	go to state 79
    primary_exp	go to state 80



state 117

    relational_exp  ->  relational_exp TGREAT . addtive_exp   (rule 94)

    TIDEN	shift, and go to state 50
    TNUMBER	shift, and go to state 102
    TINC	shift, and go to state 55
    TDEC	shift, and go to state 56
    TMINUS	shift, and go to state 57
    TNOT	shift, and go to state 58
    TLPAREN	shift, and go to state 59

    addtive_exp	go to state 155
    multiplicative_exp	go to state 77
    unary_exp	go to state 151
    postfix_exp	go to state 79
    primary_exp	go to state 80



state 118

    relational_exp  ->  relational_exp TLESS . addtive_exp   (rule 95)

    TIDEN	shift, and go to state 50
    TNUMBER	shift, and go to state 102
    TINC	shift, and go to state 55
    TDEC	shift, and go to state 56
    TMINUS	shift, and go to state 57
    TNOT	shift, and go to state 58
    TLPAREN	shift, and go to state 59

    addtive_exp	go to state 156
    multiplicative_exp	go to state 77
    unary_exp	go to state 151
    postfix_exp	go to state 79
    primary_exp	go to state 80



state 119

    relational_exp  ->  relational_exp TGREATE . addtive_exp   (rule 96)

    TIDEN	shift, and go to state 50
    TNUMBER	shift, and go to state 102
    TINC	shift, and go to state 55
    TDEC	shift, and go to state 56
    TMINUS	shift, and go to state 57
    TNOT	shift, and go to state 58
    TLPAREN	shift, and go to state 59

    addtive_exp	go to state 157
    multiplicative_exp	go to state 77
    unary_exp	go to state 151
    postfix_exp	go to state 79
    primary_exp	go to state 80



state 120

    relational_exp  ->  relational_exp TLESSE . addtive_exp   (rule 97)

    TIDEN	shift, and go to state 50
    TNUMBER	shift, and go to state 102
    TINC	shift, and go to state 55
    TDEC	shift, and go to state 56
    TMINUS	shift, and go to state 57
    TNOT	shift, and go to state 58
    TLPAREN	shift, and go to state 59

    addtive_exp	go to state 158
    multiplicative_exp	go to state 77
    unary_exp	go to state 151
    postfix_exp	go to state 79
    primary_exp	go to state 80



state 121

    addtive_exp  ->  addtive_exp TPLUS . multiplicative_exp   (rule 99)

    TIDEN	shift, and go to state 50
    TNUMBER	shift, and go to state 102
    TINC	shift, and go to state 55
    TDEC	shift, and go to state 56
    TMINUS	shift, and go to state 57
    TNOT	shift, and go to state 58
    TLPAREN	shift, and go to state 59

    multiplicative_exp	go to state 159
    unary_exp	go to state 151
    postfix_exp	go to state 79
    primary_exp	go to state 80



state 122

    addtive_exp  ->  addtive_exp TMINUS . multiplicative_exp   (rule 100)

    TIDEN	shift, and go to state 50
    TNUMBER	shift, and go to state 102
    TINC	shift, and go to state 55
    TDEC	shift, and go to state 56
    TMINUS	shift, and go to state 57
    TNOT	shift, and go to state 58
    TLPAREN	shift, and go to state 59

    multiplicative_exp	go to state 160
    unary_exp	go to state 151
    postfix_exp	go to state 79
    primary_exp	go to state 80



state 123

    multiplicative_exp  ->  multiplicative_exp TMULTIPLY . unary_exp   (rule 102)

    TIDEN	shift, and go to state 50
    TNUMBER	shift, and go to state 102
    TINC	shift, and go to state 55
    TDEC	shift, and go to state 56
    TMINUS	shift, and go to state 57
    TNOT	shift, and go to state 58
    TLPAREN	shift, and go to state 59

    unary_exp	go to state 161
    postfix_exp	go to state 79
    primary_exp	go to state 80



state 124

    multiplicative_exp  ->  multiplicative_exp TDIVIDE . unary_exp   (rule 103)

    TIDEN	shift, and go to state 50
    TNUMBER	shift, and go to state 102
    TINC	shift, and go to state 55
    TDEC	shift, and go to state 56
    TMINUS	shift, and go to state 57
    TNOT	shift, and go to state 58
    TLPAREN	shift, and go to state 59

    unary_exp	go to state 162
    postfix_exp	go to state 79
    primary_exp	go to state 80



state 125

    multiplicative_exp  ->  multiplicative_exp TMOD . unary_exp   (rule 104)

    TIDEN	shift, and go to state 50
    TNUMBER	shift, and go to state 102
    TINC	shift, and go to state 55
    TDEC	shift, and go to state 56
    TMINUS	shift, and go to state 57
    TNOT	shift, and go to state 58
    TLPAREN	shift, and go to state 59

    unary_exp	go to state 163
    postfix_exp	go to state 79
    primary_exp	go to state 80



state 126

    assignment_exp  ->  unary_exp TADDASSIGN . assignment_exp   (rule 80)

    TIDEN	shift, and go to state 50
    TNUMBER	shift, and go to state 51
    TINC	shift, and go to state 55
    TDEC	shift, and go to state 56
    TMINUS	shift, and go to state 57
    TNOT	shift, and go to state 58
    TLPAREN	shift, and go to state 59

    $default	reduce using rule 51 (opt_number)

    opt_number	go to state 61
    assignment_exp	go to state 164
    logical_or_exp	go to state 72
    logical_and_exp	go to state 73
    equality_exp	go to state 74
    relational_exp	go to state 75
    addtive_exp	go to state 76
    multiplicative_exp	go to state 77
    unary_exp	go to state 78
    postfix_exp	go to state 79
    primary_exp	go to state 80



state 127

    assignment_exp  ->  unary_exp TSUBASSIGN . assignment_exp   (rule 81)

    TIDEN	shift, and go to state 50
    TNUMBER	shift, and go to state 51
    TINC	shift, and go to state 55
    TDEC	shift, and go to state 56
    TMINUS	shift, and go to state 57
    TNOT	shift, and go to state 58
    TLPAREN	shift, and go to state 59

    $default	reduce using rule 51 (opt_number)

    opt_number	go to state 61
    assignment_exp	go to state 165
    logical_or_exp	go to state 72
    logical_and_exp	go to state 73
    equality_exp	go to state 74
    relational_exp	go to state 75
    addtive_exp	go to state 76
    multiplicative_exp	go to state 77
    unary_exp	go to state 78
    postfix_exp	go to state 79
    primary_exp	go to state 80



state 128

    assignment_exp  ->  unary_exp TMULASSIGN . assignment_exp   (rule 82)

    TIDEN	shift, and go to state 50
    TNUMBER	shift, and go to state 51
    TINC	shift, and go to state 55
    TDEC	shift, and go to state 56
    TMINUS	shift, and go to state 57
    TNOT	shift, and go to state 58
    TLPAREN	shift, and go to state 59

    $default	reduce using rule 51 (opt_number)

    opt_number	go to state 61
    assignment_exp	go to state 166
    logical_or_exp	go to state 72
    logical_and_exp	go to state 73
    equality_exp	go to state 74
    relational_exp	go to state 75
    addtive_exp	go to state 76
    multiplicative_exp	go to state 77
    unary_exp	go to state 78
    postfix_exp	go to state 79
    primary_exp	go to state 80



state 129

    assignment_exp  ->  unary_exp TDIVASSIGN . assignment_exp   (rule 83)

    TIDEN	shift, and go to state 50
    TNUMBER	shift, and go to state 51
    TINC	shift, and go to state 55
    TDEC	shift, and go to state 56
    TMINUS	shift, and go to state 57
    TNOT	shift, and go to state 58
    TLPAREN	shift, and go to state 59

    $default	reduce using rule 51 (opt_number)

    opt_number	go to state 61
    assignment_exp	go to state 167
    logical_or_exp	go to state 72
    logical_and_exp	go to state 73
    equality_exp	go to state 74
    relational_exp	go to state 75
    addtive_exp	go to state 76
    multiplicative_exp	go to state 77
    unary_exp	go to state 78
    postfix_exp	go to state 79
    primary_exp	go to state 80



state 130

    assignment_exp  ->  unary_exp TMODASSIGN . assignment_exp   (rule 84)

    TIDEN	shift, and go to state 50
    TNUMBER	shift, and go to state 51
    TINC	shift, and go to state 55
    TDEC	shift, and go to state 56
    TMINUS	shift, and go to state 57
    TNOT	shift, and go to state 58
    TLPAREN	shift, and go to state 59

    $default	reduce using rule 51 (opt_number)

    opt_number	go to state 61
    assignment_exp	go to state 168
    logical_or_exp	go to state 72
    logical_and_exp	go to state 73
    equality_exp	go to state 74
    relational_exp	go to state 75
    addtive_exp	go to state 76
    multiplicative_exp	go to state 77
    unary_exp	go to state 78
    postfix_exp	go to state 79
    primary_exp	go to state 80



state 131

    assignment_exp  ->  unary_exp TASSIGN . assignment_exp   (rule 79)

    TIDEN	shift, and go to state 50
    TNUMBER	shift, and go to state 51
    TINC	shift, and go to state 55
    TDEC	shift, and go to state 56
    TMINUS	shift, and go to state 57
    TNOT	shift, and go to state 58
    TLPAREN	shift, and go to state 59

    $default	reduce using rule 51 (opt_number)

    opt_number	go to state 61
    assignment_exp	go to state 169
    logical_or_exp	go to state 72
    logical_and_exp	go to state 73
    equality_exp	go to state 74
    relational_exp	go to state 75
    addtive_exp	go to state 76
    multiplicative_exp	go to state 77
    unary_exp	go to state 78
    postfix_exp	go to state 79
    primary_exp	go to state 80



state 132

    postfix_exp  ->  postfix_exp TINC .   (rule 113)

    $default	reduce using rule 113 (postfix_exp)



state 133

    postfix_exp  ->  postfix_exp TDEC .   (rule 114)

    $default	reduce using rule 114 (postfix_exp)



state 134

    postfix_exp  ->  postfix_exp TLPAREN . opt_actual_param TRPAREN   (rule 112)

    TIDEN	shift, and go to state 50
    TNUMBER	shift, and go to state 51
    TINC	shift, and go to state 55
    TDEC	shift, and go to state 56
    TMINUS	shift, and go to state 57
    TNOT	shift, and go to state 58
    TLPAREN	shift, and go to state 59

    TRPAREN	reduce using rule 117 (opt_actual_param)
    $default	reduce using rule 51 (opt_number)

    opt_number	go to state 61
    assignment_exp	go to state 170
    logical_or_exp	go to state 72
    logical_and_exp	go to state 73
    equality_exp	go to state 74
    relational_exp	go to state 75
    addtive_exp	go to state 76
    multiplicative_exp	go to state 77
    unary_exp	go to state 78
    postfix_exp	go to state 79
    opt_actual_param	go to state 171
    actual_param	go to state 172
    actual_param_list	go to state 173
    primary_exp	go to state 80



state 135

    postfix_exp  ->  postfix_exp TLBRACKET . expression TRBRACKET   (rule 111)
    postfix_exp  ->  postfix_exp TLBRACKET . expression error   (rule 115)

    TIDEN	shift, and go to state 50
    TNUMBER	shift, and go to state 51
    TINC	shift, and go to state 55
    TDEC	shift, and go to state 56
    TMINUS	shift, and go to state 57
    TNOT	shift, and go to state 58
    TLPAREN	shift, and go to state 59

    $default	reduce using rule 51 (opt_number)

    opt_number	go to state 61
    expression	go to state 174
    assignment_exp	go to state 71
    logical_or_exp	go to state 72
    logical_and_exp	go to state 73
    equality_exp	go to state 74
    relational_exp	go to state 75
    addtive_exp	go to state 76
    multiplicative_exp	go to state 77
    unary_exp	go to state 78
    postfix_exp	go to state 79
    primary_exp	go to state 80



state 136

    declarator  ->  TIDEN TLBRACKET opt_number error .   (rule 49)

    $default	reduce using rule 49 (declarator)



state 137

    declarator  ->  TIDEN TLBRACKET opt_number TRBRACKET .   (rule 48)

    $default	reduce using rule 48 (declarator)



state 138

    formal_param_list  ->  formal_param_list TCOMMA param_dcl .   (rule 29)

    $default	reduce using rule 29 (formal_param_list)



state 139

    function_expression  ->  TLPAREN . addtive_exp TRPAREN   (rule 76)
    function_expression  ->  TLPAREN . addtive_exp error   (rule 77)

    TIDEN	shift, and go to state 50
    TNUMBER	shift, and go to state 102
    TINC	shift, and go to state 55
    TDEC	shift, and go to state 56
    TMINUS	shift, and go to state 57
    TNOT	shift, and go to state 58
    TLPAREN	shift, and go to state 59

    addtive_exp	go to state 175
    multiplicative_exp	go to state 77
    unary_exp	go to state 151
    postfix_exp	go to state 79
    primary_exp	go to state 80



state 140

    function_st  ->  TPLUS function_expression .   (rule 71)

    $default	reduce using rule 71 (function_st)



state 141

    function_st  ->  TMINUS function_expression .   (rule 72)

    $default	reduce using rule 72 (function_st)



state 142

    function_st  ->  TMULTIPLY function_expression .   (rule 73)

    $default	reduce using rule 73 (function_st)



state 143

    function_st  ->  TDIVIDE function_expression .   (rule 74)

    $default	reduce using rule 74 (function_st)



state 144

    function_st  ->  TMOD function_expression .   (rule 75)

    $default	reduce using rule 75 (function_st)



state 145

    if_st  ->  TIF TLPAREN expression . TRPAREN statement   (rule 66)
    if_st  ->  TIF TLPAREN expression . TRPAREN statement TELSE statement   (rule 67)

    TRPAREN	shift, and go to state 176



state 146

    return_st  ->  TRETURN opt_expression TSEMICOLON .   (rule 69)

    $default	reduce using rule 69 (return_st)



state 147

    while_st  ->  TWHILE TLPAREN expression . TRPAREN statement   (rule 68)

    TRPAREN	shift, and go to state 177



state 148

    primary_exp  ->  TLPAREN expression TRPAREN .   (rule 123)

    $default	reduce using rule 123 (primary_exp)



state 149

    assignment_exp  ->  opt_number TASSIGN assignment_exp .   (rule 85)

    $default	reduce using rule 85 (assignment_exp)



state 150

    logical_or_exp  ->  logical_or_exp TOR logical_and_exp .   (rule 87)
    logical_and_exp  ->  logical_and_exp . TAND equality_exp   (rule 89)

    TAND	shift, and go to state 114

    $default	reduce using rule 87 (logical_or_exp)



state 151

    multiplicative_exp  ->  unary_exp .   (rule 101)

    $default	reduce using rule 101 (multiplicative_exp)



state 152

    logical_and_exp  ->  logical_and_exp TAND equality_exp .   (rule 89)
    equality_exp  ->  equality_exp . TEQUAL relational_exp   (rule 91)
    equality_exp  ->  equality_exp . TNOTEQU relational_exp   (rule 92)

    TEQUAL	shift, and go to state 115
    TNOTEQU	shift, and go to state 116

    $default	reduce using rule 89 (logical_and_exp)



state 153

    equality_exp  ->  equality_exp TEQUAL relational_exp .   (rule 91)
    relational_exp  ->  relational_exp . TGREAT addtive_exp   (rule 94)
    relational_exp  ->  relational_exp . TLESS addtive_exp   (rule 95)
    relational_exp  ->  relational_exp . TGREATE addtive_exp   (rule 96)
    relational_exp  ->  relational_exp . TLESSE addtive_exp   (rule 97)

    TGREAT	shift, and go to state 117
    TLESS	shift, and go to state 118
    TGREATE	shift, and go to state 119
    TLESSE	shift, and go to state 120

    $default	reduce using rule 91 (equality_exp)



state 154

    equality_exp  ->  equality_exp TNOTEQU relational_exp .   (rule 92)
    relational_exp  ->  relational_exp . TGREAT addtive_exp   (rule 94)
    relational_exp  ->  relational_exp . TLESS addtive_exp   (rule 95)
    relational_exp  ->  relational_exp . TGREATE addtive_exp   (rule 96)
    relational_exp  ->  relational_exp . TLESSE addtive_exp   (rule 97)

    TGREAT	shift, and go to state 117
    TLESS	shift, and go to state 118
    TGREATE	shift, and go to state 119
    TLESSE	shift, and go to state 120

    $default	reduce using rule 92 (equality_exp)



state 155

    relational_exp  ->  relational_exp TGREAT addtive_exp .   (rule 94)
    addtive_exp  ->  addtive_exp . TPLUS multiplicative_exp   (rule 99)
    addtive_exp  ->  addtive_exp . TMINUS multiplicative_exp   (rule 100)

    TPLUS	shift, and go to state 121
    TMINUS	shift, and go to state 122

    $default	reduce using rule 94 (relational_exp)



state 156

    relational_exp  ->  relational_exp TLESS addtive_exp .   (rule 95)
    addtive_exp  ->  addtive_exp . TPLUS multiplicative_exp   (rule 99)
    addtive_exp  ->  addtive_exp . TMINUS multiplicative_exp   (rule 100)

    TPLUS	shift, and go to state 121
    TMINUS	shift, and go to state 122

    $default	reduce using rule 95 (relational_exp)



state 157

    relational_exp  ->  relational_exp TGREATE addtive_exp .   (rule 96)
    addtive_exp  ->  addtive_exp . TPLUS multiplicative_exp   (rule 99)
    addtive_exp  ->  addtive_exp . TMINUS multiplicative_exp   (rule 100)

    TPLUS	shift, and go to state 121
    TMINUS	shift, and go to state 122

    $default	reduce using rule 96 (relational_exp)



state 158

    relational_exp  ->  relational_exp TLESSE addtive_exp .   (rule 97)
    addtive_exp  ->  addtive_exp . TPLUS multiplicative_exp   (rule 99)
    addtive_exp  ->  addtive_exp . TMINUS multiplicative_exp   (rule 100)

    TPLUS	shift, and go to state 121
    TMINUS	shift, and go to state 122

    $default	reduce using rule 97 (relational_exp)



state 159

    addtive_exp  ->  addtive_exp TPLUS multiplicative_exp .   (rule 99)
    multiplicative_exp  ->  multiplicative_exp . TMULTIPLY unary_exp   (rule 102)
    multiplicative_exp  ->  multiplicative_exp . TDIVIDE unary_exp   (rule 103)
    multiplicative_exp  ->  multiplicative_exp . TMOD unary_exp   (rule 104)

    TMULTIPLY	shift, and go to state 123
    TDIVIDE	shift, and go to state 124
    TMOD	shift, and go to state 125

    $default	reduce using rule 99 (addtive_exp)



state 160

    addtive_exp  ->  addtive_exp TMINUS multiplicative_exp .   (rule 100)
    multiplicative_exp  ->  multiplicative_exp . TMULTIPLY unary_exp   (rule 102)
    multiplicative_exp  ->  multiplicative_exp . TDIVIDE unary_exp   (rule 103)
    multiplicative_exp  ->  multiplicative_exp . TMOD unary_exp   (rule 104)

    TMULTIPLY	shift, and go to state 123
    TDIVIDE	shift, and go to state 124
    TMOD	shift, and go to state 125

    $default	reduce using rule 100 (addtive_exp)



state 161

    multiplicative_exp  ->  multiplicative_exp TMULTIPLY unary_exp .   (rule 102)

    $default	reduce using rule 102 (multiplicative_exp)



state 162

    multiplicative_exp  ->  multiplicative_exp TDIVIDE unary_exp .   (rule 103)

    $default	reduce using rule 103 (multiplicative_exp)



state 163

    multiplicative_exp  ->  multiplicative_exp TMOD unary_exp .   (rule 104)

    $default	reduce using rule 104 (multiplicative_exp)



state 164

    assignment_exp  ->  unary_exp TADDASSIGN assignment_exp .   (rule 80)

    $default	reduce using rule 80 (assignment_exp)



state 165

    assignment_exp  ->  unary_exp TSUBASSIGN assignment_exp .   (rule 81)

    $default	reduce using rule 81 (assignment_exp)



state 166

    assignment_exp  ->  unary_exp TMULASSIGN assignment_exp .   (rule 82)

    $default	reduce using rule 82 (assignment_exp)



state 167

    assignment_exp  ->  unary_exp TDIVASSIGN assignment_exp .   (rule 83)

    $default	reduce using rule 83 (assignment_exp)



state 168

    assignment_exp  ->  unary_exp TMODASSIGN assignment_exp .   (rule 84)

    $default	reduce using rule 84 (assignment_exp)



state 169

    assignment_exp  ->  unary_exp TASSIGN assignment_exp .   (rule 79)

    $default	reduce using rule 79 (assignment_exp)



state 170

    actual_param_list  ->  assignment_exp .   (rule 119)

    $default	reduce using rule 119 (actual_param_list)



state 171

    postfix_exp  ->  postfix_exp TLPAREN opt_actual_param . TRPAREN   (rule 112)

    TRPAREN	shift, and go to state 178



state 172

    opt_actual_param  ->  actual_param .   (rule 116)

    $default	reduce using rule 116 (opt_actual_param)



state 173

    actual_param  ->  actual_param_list .   (rule 118)
    actual_param_list  ->  actual_param_list . TCOMMA assignment_exp   (rule 120)

    TCOMMA	shift, and go to state 179

    $default	reduce using rule 118 (actual_param)



state 174

    postfix_exp  ->  postfix_exp TLBRACKET expression . TRBRACKET   (rule 111)
    postfix_exp  ->  postfix_exp TLBRACKET expression . error   (rule 115)

    error	shift, and go to state 180
    TRBRACKET	shift, and go to state 181



state 175

    function_expression  ->  TLPAREN addtive_exp . TRPAREN   (rule 76)
    function_expression  ->  TLPAREN addtive_exp . error   (rule 77)
    addtive_exp  ->  addtive_exp . TPLUS multiplicative_exp   (rule 99)
    addtive_exp  ->  addtive_exp . TMINUS multiplicative_exp   (rule 100)

    error	shift, and go to state 182
    TPLUS	shift, and go to state 121
    TMINUS	shift, and go to state 122
    TRPAREN	shift, and go to state 183



state 176

    if_st  ->  TIF TLPAREN expression TRPAREN . statement   (rule 66)
    if_st  ->  TIF TLPAREN expression TRPAREN . statement TELSE statement   (rule 67)

    TIDEN	shift, and go to state 50
    TNUMBER	shift, and go to state 51
    TIF 	shift, and go to state 52
    TRETURN	shift, and go to state 53
    TWHILE	shift, and go to state 54
    TINC	shift, and go to state 55
    TDEC	shift, and go to state 56
    TMINUS	shift, and go to state 57
    TNOT	shift, and go to state 58
    TLPAREN	shift, and go to state 59
    TLBRACE	shift, and go to state 22

    TSEMICOLON	reduce using rule 65 (opt_expression)
    $default	reduce using rule 51 (opt_number)

    compound_st	go to state 60
    opt_number	go to state 61
    statement	go to state 184
    expression_st	go to state 65
    opt_expression	go to state 66
    if_st	go to state 67
    while_st	go to state 68
    return_st	go to state 69
    expression	go to state 70
    assignment_exp	go to state 71
    logical_or_exp	go to state 72
    logical_and_exp	go to state 73
    equality_exp	go to state 74
    relational_exp	go to state 75
    addtive_exp	go to state 76
    multiplicative_exp	go to state 77
    unary_exp	go to state 78
    postfix_exp	go to state 79
    primary_exp	go to state 80



state 177

    while_st  ->  TWHILE TLPAREN expression TRPAREN . statement   (rule 68)

    TIDEN	shift, and go to state 50
    TNUMBER	shift, and go to state 51
    TIF 	shift, and go to state 52
    TRETURN	shift, and go to state 53
    TWHILE	shift, and go to state 54
    TINC	shift, and go to state 55
    TDEC	shift, and go to state 56
    TMINUS	shift, and go to state 57
    TNOT	shift, and go to state 58
    TLPAREN	shift, and go to state 59
    TLBRACE	shift, and go to state 22

    TSEMICOLON	reduce using rule 65 (opt_expression)
    $default	reduce using rule 51 (opt_number)

    compound_st	go to state 60
    opt_number	go to state 61
    statement	go to state 185
    expression_st	go to state 65
    opt_expression	go to state 66
    if_st	go to state 67
    while_st	go to state 68
    return_st	go to state 69
    expression	go to state 70
    assignment_exp	go to state 71
    logical_or_exp	go to state 72
    logical_and_exp	go to state 73
    equality_exp	go to state 74
    relational_exp	go to state 75
    addtive_exp	go to state 76
    multiplicative_exp	go to state 77
    unary_exp	go to state 78
    postfix_exp	go to state 79
    primary_exp	go to state 80



state 178

    postfix_exp  ->  postfix_exp TLPAREN opt_actual_param TRPAREN .   (rule 112)

    $default	reduce using rule 112 (postfix_exp)



state 179

    actual_param_list  ->  actual_param_list TCOMMA . assignment_exp   (rule 120)

    TIDEN	shift, and go to state 50
    TNUMBER	shift, and go to state 51
    TINC	shift, and go to state 55
    TDEC	shift, and go to state 56
    TMINUS	shift, and go to state 57
    TNOT	shift, and go to state 58
    TLPAREN	shift, and go to state 59

    $default	reduce using rule 51 (opt_number)

    opt_number	go to state 61
    assignment_exp	go to state 186
    logical_or_exp	go to state 72
    logical_and_exp	go to state 73
    equality_exp	go to state 74
    relational_exp	go to state 75
    addtive_exp	go to state 76
    multiplicative_exp	go to state 77
    unary_exp	go to state 78
    postfix_exp	go to state 79
    primary_exp	go to state 80



state 180

    postfix_exp  ->  postfix_exp TLBRACKET expression error .   (rule 115)

    $default	reduce using rule 115 (postfix_exp)



state 181

    postfix_exp  ->  postfix_exp TLBRACKET expression TRBRACKET .   (rule 111)

    $default	reduce using rule 111 (postfix_exp)



state 182

    function_expression  ->  TLPAREN addtive_exp error .   (rule 77)

    $default	reduce using rule 77 (function_expression)



state 183

    function_expression  ->  TLPAREN addtive_exp TRPAREN .   (rule 76)

    $default	reduce using rule 76 (function_expression)



state 184

    if_st  ->  TIF TLPAREN expression TRPAREN statement .   (rule 66)
    if_st  ->  TIF TLPAREN expression TRPAREN statement . TELSE statement   (rule 67)

    TELSE	shift, and go to state 187

    $default	reduce using rule 66 (if_st)



state 185

    while_st  ->  TWHILE TLPAREN expression TRPAREN statement .   (rule 68)

    $default	reduce using rule 68 (while_st)



state 186

    actual_param_list  ->  actual_param_list TCOMMA assignment_exp .   (rule 120)

    $default	reduce using rule 120 (actual_param_list)



state 187

    if_st  ->  TIF TLPAREN expression TRPAREN statement TELSE . statement   (rule 67)

    TIDEN	shift, and go to state 50
    TNUMBER	shift, and go to state 51
    TIF 	shift, and go to state 52
    TRETURN	shift, and go to state 53
    TWHILE	shift, and go to state 54
    TINC	shift, and go to state 55
    TDEC	shift, and go to state 56
    TMINUS	shift, and go to state 57
    TNOT	shift, and go to state 58
    TLPAREN	shift, and go to state 59
    TLBRACE	shift, and go to state 22

    TSEMICOLON	reduce using rule 65 (opt_expression)
    $default	reduce using rule 51 (opt_number)

    compound_st	go to state 60
    opt_number	go to state 61
    statement	go to state 188
    expression_st	go to state 65
    opt_expression	go to state 66
    if_st	go to state 67
    while_st	go to state 68
    return_st	go to state 69
    expression	go to state 70
    assignment_exp	go to state 71
    logical_or_exp	go to state 72
    logical_and_exp	go to state 73
    equality_exp	go to state 74
    relational_exp	go to state 75
    addtive_exp	go to state 76
    multiplicative_exp	go to state 77
    unary_exp	go to state 78
    postfix_exp	go to state 79
    primary_exp	go to state 80



state 188

    if_st  ->  TIF TLPAREN expression TRPAREN statement TELSE statement .   (rule 67)

    $default	reduce using rule 67 (if_st)



state 189

    $   	go to state 190



state 190

    $   	go to state 191



state 191

    $default	accept
